{"version":3,"sources":["assets/icons/face_mask-1.png","components/navBar/navBar.js","components/header/Header.js","components/challengeCard/ChallengeCard.js","components/challengesList/ChallengesList.js","components/challengeDetail/ChallengeDetail.js","services/airtableClient.js","services/geolocation.js","components/landing/Landing.js","components/acceptedChallenges/AcceptedChallenges.js","App.js","index.js"],"names":["module","exports","NavBar","className","to","Header","href","src","faceMask","alt","ChallengeCard","props","id","key","type","image","name","loading","ChallengesList","challengesInfo","challenges","map","challenge","description","ChallengeDetail","handleAcceptedChallenges","acceptedChallenges","hidden","find","chall","onClick","ev","target","dataset","data-id","getChallenges","fetch","then","response","json","data","records","record","fields","catch","error","console","geolocationSuccess","resolve","reject","position","coords","latitude","longitude","location","results","components","country_code","text","statePos","lastIndexOf","state","stateInfo","substring","regexp","RegExp","exec","ia14d","parseFloat","reg","region","province","fatality","fatality_rate","getImpact","options","Promise","navigator","geolocation","getCurrentPosition","Landing","AcceptedChallenges","acceptedChallengesInfo","acceptedChallenge","App","useState","setChallenges","setAcceptedChallenges","useEffect","airtableApi","getCovidImpact","log","exact","path","render","challengeId","match","params","foundChallenge","undefined","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a92a4096.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face_mask-1.b2df329f.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './navBar.scss';\n\nfunction NavBar() {\n  return (\n    <nav className=\"nav-bar\">\n      <ul className=\"nav-menu\">\n        <li className=\"nav-menu__item\">\n          <Link className=\"nav-menu__link\" to=\"/App\">\n            TODOS\n          </Link>\n        </li>\n        <li className=\"nav-menu__item\">\n          <Link className=\"nav-menu__link\" to=\"/AcceptedChallenges\">\n            ACEPTADOS\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport NavBar from '../navBar/navBar';\nimport './header.scss';\nimport faceMask from '../../assets/icons/face_mask-1.png';\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <a href=\"./\" className=\"header-container\">\n        <img\n          className=\"header-icon\"\n          src={faceMask}\n          alt=\"Icono mujer mascarilla\"\n        ></img>\n        <h1 className=\"header-title\">Retos</h1>\n      </a>\n\n      <NavBar />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './challengeCard.scss';\n\nfunction ChallengeCard(props) {\n    \n    return (\n    \n        <Link to={`/challenge/${props.id}`}>\n            <li key={props.id} className={`challenge-card ${props.type}`}>\n                <div className=\"challenge-card__container\" >\n                    <img\n                    className=\"challenge-card__image\"\n                    src={props.image}\n                    alt={`${props.name}'s pic`}\n                    loading=\"eager\"\n                     />\n                </div>\n                <h3 className=\"challenge-card__title\">{props.name}</h3>   \n            </li>\n        </Link>\n    );\n};\n\nexport default ChallengeCard;\n","import React from 'react';\nimport ChallengeCard from '../challengeCard/ChallengeCard';\nimport './challengesList.scss';\n\nfunction ChallengesList({ challenges }) {\n    const challengesInfo = challenges.map((challenge) => {\n        return ( \n            <ChallengeCard\n                key={challenge.id}\n                id={challenge.id}\n                type={challenge.type}\n                image={challenge.image}\n                name={challenge.name}\n                description={challenge.description}\n            />     \n        );\n    });\n    return <ul className=\"challenge-list\">{challengesInfo}</ul>;\n};\n\nexport default ChallengesList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './challengeDetail.scss';\n\nfunction ChallengeDetail({ challenge, handleAcceptedChallenges, acceptedChallenges }) {\n    const handleAccepted = (ev) => {\n        handleAcceptedChallenges (ev.target.dataset.id);\n    };\n\n    return (\n        <div className={`modal ${challenge.type}`}>\n            <Link className=\"button__wrapp\" to=\"/App\">\n                <button className=\"button__close\">X</button>\n            </Link>\n            <div className=\"modal__content wrapper\">\n                <div className=\"modal__content-image\">\n                    <img\n                        className=\"image\"\n                        src={challenge.image}\n                        alt={`${challenge.name}Â´s pic`}\n                    ></img>\n                </div>\n                <div className=\"modal__content-info\">\n                    <h1 className=\"modal__title\">{challenge.name}</h1>\n                    <p className=\"modal__description\">\n                        {challenge.description}\n                    </p>\n                    <Link className=\"btn__container\" hidden={acceptedChallenges.find((chall)=>chall.id === challenge.id) ? true : false} to=\"/App\">\n                        <button\n                            onClick={handleAccepted}\n                            className=\"modal__button--accept\"\n                            data-id={challenge.id}\n                         >Acepto el reto\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ChallengeDetail;\n","const getChallenges = () => {\n    return fetch('https://api.airtable.com/v0/app78rjhFfSaZp3fl/challenges?api_key=keyZ7hg5DA2tYaRqh')\n        .then((response) => response.json())\n        .then((data) => {\n            return data.records.map((record) => {\n                return {\n                    id: record.id,\n                    name: record.fields.name,\n                    description: record.fields.description,\n                    image: record.fields.image,\n                    type: record.fields.type\n                }\n            })\n        })\n        .catch((error) => {\n            console.error(error);\n        })\n};\n\nexport default getChallenges;","const getImpact = function (options) {\n    return new Promise((resolve, reject) => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(geolocationSuccess(resolve, reject), reject, options)\n        } else {\n            console.error('Geolocation unavailable in this device')\n            reject({ error: 'Geolocation unavailable in this device' })\n        }\n    })\n}\n\nconst geolocationSuccess = (resolve, reject) => {\n    return (position) => {\n        fetch(`https://api.opencagedata.com/geocode/v1/json?q=${position.coords.latitude}+${position.coords.longitude}&key=ea06f889078043ec889ea061a1a14171&no_annotations=1&language=es`)\n            .then((response) => response.json())\n            .then((data) => {\n                const location = data.results[0].components\n                if (location.country_code === 'es') { // Get impact for Spain\n                    fetch('https://raw.githubusercontent.com/datadista/datasets/master/COVID%2019/ccaa_ia14d.csv')\n                        .then((response) => response.text())\n                        .then((text) => {\n                            const statePos = text.lastIndexOf(location.state)\n                            // Get ia14d from dataset\n                            let stateInfo = text.substring(statePos)\n                            let regexp = `${location.state},(\\\\d+.\\\\d*)`\n                            //console.log(regexp)\n                            let re = new RegExp(regexp, \"g\")\n                            let results = re.exec(stateInfo)\n                            const ia14d = parseFloat(results[1])\n                            resolve({\n                                ia14d\n                            })\n                        })\n                        .catch(reject)\n                } else { // Get fatality rate for the rest of the world (not Spain)\n                    fetch(`https://api.opencagedata.com/geocode/v1/json?q=${position.coords.latitude}+${position.coords.longitude}&key=ea06f889078043ec889ea061a1a14171&no_annotations=1&language=en`)\n                        .then((response) => response.json())\n                        .then((data) => {\n                            const location = data.results[0].components\n                            fetch(`https://covid-api.com/api/reports?iso=${location[\"ISO_3166-1_alpha-3\"]}`)\n                                .then((response) => response.json())\n                                .then((json) => {\n                                    let stateInfo = json.data.find((reg) => {\n                                        return reg.region.province === location.state\n                                    })\n                                    if (stateInfo) {\n                                        resolve({ fatality: stateInfo.fatality_rate })\n                                    } else {\n                                        resolve({ fatality: json.data[0].fatality_rate })\n                                    }\n                                })\n                                .catch(reject)\n                        })\n            }\n    })\n            .catch (reject)\n    }\n}\n\nexport default getImpact","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './landing.scss';\r\n// import ImageTitle from '../images/title.png';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <section className=\"landing\">\r\n      <header className=\"landing__header\">\r\n        <div className=\"landing__title\">\r\n          {/* <img\r\n            className=\"landing__title-img\"\r\n            src={ImageTitle}\r\n            alt=\"Rick y Morty\"\r\n          ></img> */}\r\n        </div>\r\n        <p className=\"landing__p\">NOMBRE APP</p>\r\n        <Link to=\"/App\" className=\"landing__btn\">\r\n          Â¿Te atreves a aceptar el reto?\r\n        </Link>\r\n      </header>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport ChallengeCard from '../challengeCard/ChallengeCard';\r\nimport './acceptedChallenges.scss';\r\n\r\nconst AcceptedChallenges = ({ acceptedChallenges }) => {\r\n    const acceptedChallengesInfo = acceptedChallenges.map((acceptedChallenge) => {\r\n        return ( \r\n            <ChallengeCard\r\n                key={acceptedChallenge.id}\r\n                id={acceptedChallenge.id}\r\n                type={acceptedChallenge.type}\r\n                image={acceptedChallenge.image}\r\n                name={acceptedChallenge.name}\r\n                description={acceptedChallenge.description}\r\n            />     \r\n        );\r\n    });\r\n    return <ul className=\"challenge-list\">{acceptedChallengesInfo}</ul>;\r\n};\r\n\r\nexport default AcceptedChallenges;","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './components/header/Header';\nimport ChallengesList from './components/challengesList/ChallengesList';\nimport ChallengeDetail from './components/challengeDetail/ChallengeDetail';\nimport airtableApi from './services/airtableClient';\nimport getCovidImpact from './services/geolocation';\nimport Landing from './components/landing/Landing';\nimport './app.scss';\nimport AcceptedChallenges from './components/acceptedChallenges/AcceptedChallenges';\n\nfunction App() {\n  const [challenges, setChallenges] = useState([]);\n  const [acceptedChallenges, setAcceptedChallenges] = useState([]);\n  \n\n  useEffect(() => {\n    airtableApi().then((data) => {\n      setChallenges(data);\n    });\n    getCovidImpact().then((data) => {\n      if (data.ia14d){\n        console.log('Incidencia acumulada 14 dÃ­as:', data.ia14d)\n        // Aplicar estilos segun incidencia\n      } else if (data.fatality) {\n        console.log('Tasa de mortalidad:', data.fatality)\n        // Aplicar estilos segun mortalidad\n      }\n    })\n    .catch((error) => {\n      console.error('Error retrieving covid data:', error)\n      // Aplicar estilo por defecto\n    });\n  }, []);\n\n\n  const handleAcceptedChallenges = (data) => {\n    setAcceptedChallenges([...acceptedChallenges, (challenges.find((challenge) => challenge.id === data))]);\n  };\n\n  \n  const renderChallengeDetail = (props) => {\n    const challengeId = props.match.params.id;\n    const foundChallenge = challenges.find((challenge) => {\n      return challenge.id === challengeId;\n    });\n    if (foundChallenge !== undefined) {\n      return <ChallengeDetail challenge={foundChallenge} handleAcceptedChallenges={handleAcceptedChallenges} acceptedChallenges={acceptedChallenges}/>;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\">\n        <Landing />\n      </Route>\n      <Route exact path=\"/App\">\n        <Header />\n        <main className=\"main\">\n          <ChallengesList challenges={challenges} />\n        </main>\n      </Route>\n      <Route exact path=\"/AcceptedChallenges\">\n        <Header />\n        <main className=\"main\">\n          <AcceptedChallenges acceptedChallenges={acceptedChallenges} />\n        </main>\n      </Route>\n      <Switch>\n        <Route exact path=\"/challenge/:id\" render={renderChallengeDetail} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}